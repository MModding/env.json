import com.mmodding.gradle.api.EnvironmentTarget

plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'com.mmodding.gradle' version '0.0.8'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

loom {
	accessWidenerPath = file("src/main/resources/env_json.accesswidener")
}

mmodding {
	configureFabricModJson {
		namespace = "env_json"
		name = "env.json"
		description = "env.json is a Minecraft Library introducing a new sub json file extension format, with the goal of redirecting minecraft resources to other ones based on the environment context."
		addAuthor("MModding Team")
		addContributor("FirstMegaGame4")
		withContact {
			it.homepage = "https://modrinth.com/mod/env.json"
			it.sources = "https://github.com/MModding/env.json"
			it.issues = "https://github.com/MModding/env.json/issues"
		}
		license = "Code: PolyForm-Shield-1.0.0\\nAssets: All Rights Reserved"
		icon = "assets/env_json/icon.png"
		environment = EnvironmentTarget.ANY
		withEntrypoints {
			it.init("com.mmodding.env.json.impl.EnvJsonInitializer")
		}
		accessWidener = "env_json.accesswidener"
		addMixin("env_json.mixins.json")
		withDependencies {
			it.fabricLoaderVersion = ">=" + project.loader_version
			it.minecraftVersion = ">=" + project.minecraft_version
			it.javaVersion = ">=" + 21
			it.fabricApiVersion = "*"
		}
		withSuggestions {
			it.addDependency("env_driven_assets", "*")
			it.addDependency("env_driven_data", "*")
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE.md") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}